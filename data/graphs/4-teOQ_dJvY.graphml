<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyEdge</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">NOTES: just a few lines of code!
SCALE_RANGE: for locomotive alone, 3M samples/day
WORKLOAD_PEEK: take data and forward to Kinesis</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: manage data flow from kinesis_3 to dynamodb</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">Kinesis</data>
      <data key="d7">NOTES: Kinesis Data Stream</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">Kinesis</data>
      <data key="d7">NOTES: Kinesis Data Stream (filtered)</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">KinesisAnalytics</data>
      <data key="d7">NOTES: Kinesis Analytics to filter data</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">ApiGateway</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">DynamoDB</data>
      <data key="d7">DATA_PEEK: filtered sensors data</data>
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">UserCompanyAPI</data>
      <data key="d7" />
    </node>
    <edge source="0" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="7" id="1">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="2" target="6" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="2" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="6" target="8" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="7" target="2" id="1">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="6" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <data key="d0">SBB Cargo: Data Collection and Processing with Serverless Analytics Services</data>
    <data key="d1">https://www.youtube.com/watch?v=4-teOQ_dJvY</data>
    <data key="d2">[INTERESTING TAKEAWAY!]
    Railway company.
    Use sensors to reduce train inspection time.
    Data producers are sensors; consumers are some other algorithms.
    [**goal**] Want flexible to extend functions (e.g, new sensors);
    [**infrastructure as code**] to add a new data producer, just duplicate "lambda -&gt; kinesis_1 -&gt; kineses_2" and plug into kineses_3.
    Why Lambda over EC2: goal is as least operations as possible because the engineer team is small; lambda only runs a few lines of code so don't want to manage machines.</data>
    <data key="d3">data_ingestion</data>
    <data key="d4">True</data>
  </graph>
</graphml>
