<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserConsumerAPI</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">Aurora</data>
      <data key="d7">DATA_PEEK: all data (email metadata, email template, etc.)</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7">DATA_PEEK: CSV files (email address, first/last name, etc); one CSV per campaign</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">ElastiCache</data>
      <data key="d7">NOTES: redis
DATA_PEEK: job queues</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">WORKLOAD_PEEK: pull jobs from ElasticCache; merge csv files (from S3) with template from Aurora</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">NOTES: behind BYO (Bring Your Own) IP, because as an email sender, the reputation of email sender IP is important; want to use its own instead of AWS's
WORKLOAD_PEEK: Mail Transfer Agent (MTA)</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">NLB</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">Firehose</data>
      <data key="d7">NOTES: logging for email delivery status</data>
    </node>
    <edge source="0" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="4" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="4" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="4" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="3" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="4" target="2" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="4" target="1" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="4" target="6" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="7" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">8</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="5" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">7</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">CM Group: Building an Available Scalable Reliable Email Delivery System</data>
    <data key="d1">https://www.youtube.com/watch?v=zhCNn7v7mvs</data>
    <data key="d2">Email marketing company. This video is about email delivery subsystem.
    Billions of messages per year, 8-10M messages/hour at peak.
    Using ElasticCache for queues; Why not SQS? -&gt; Legacy reasons, intend to move to SQS.
    EC2 are not autoscaling, but can scale on-demand.
    Use EC2 instead of Lambda or containers: As an email service, need extreme reliability; email must be delivered exactly once. Also mention performance reasons.
    Aurora and S3 are under different accounts than others; others can be deployed in different regions.</data>
    <data key="d3">interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
