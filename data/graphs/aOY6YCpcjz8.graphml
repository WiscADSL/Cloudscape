<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7" />
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7" />
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7" />
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5">Kafka</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NOTES: Used a fallback for SQS!?
NAME: Kafka</data>
    </node>
    <node id="8">
      <data key="d5">HBase</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NOTES: Used to store a unique id of a task.
NAME: HBase</data>
    </node>
    <node id="9">
      <data key="d5">MySQL</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: MySQL</data>
    </node>
    <node id="10">
      <data key="d5" />
      <data key="d6">UserCompanyAPI</data>
      <data key="d7" />
    </node>
    <edge source="0" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="0" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9">fallback if sqs is unavailable</data>
      <data key="d10">1'</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="8" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="5" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="9" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="9" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="3" target="6" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="1" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="2" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1'.0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="1" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="9" target="2" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="9" target="3" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="10" target="0" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">HubSpot: Task Queueing System Built on top of Amazon SQS</data>
    <data key="d1">https://www.youtube.com/watch?v=aOY6YCpcjz8</data>
    <data key="d2">Asynchronous Task Queuing System. they have built a fallback system incase SQS in unavailable! That's weird/interesting. talks about why used structured (SQL). scale: 6500 tasks/sec.isolates/shards across each SQS, datastores. talks about QoS: skips pipeline steps if getting late.</data>
    <data key="d3">compute_intensive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
