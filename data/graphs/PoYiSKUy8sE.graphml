<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">StepFunctions</data>
      <data key="d7">WORKLOAD_PEEK: orchestration and holds state</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">ECS</data>
      <data key="d7">WORKLOAD_PEEK: preprocessing incoming data</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">ECS</data>
      <data key="d7">WORKLOAD_PEEK: search engine frontend, query validation and planning</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">SCALE_RANGE: 0 to 50k in an hour
WORKLOAD_PEEK: job shadowing based on data volume, triggers filter lambdas</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">SCALE_RANGE: 0 to 50k in an hour
WORKLOAD_PEEK: filtering</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">SCALE_RANGE: 0 to 50k in an hour
WORKLOAD_PEEK: result aggregation</data>
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">DynamoDB</data>
      <data key="d7" />
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7" />
    </node>
    <node id="9">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7" />
    </node>
    <node id="10">
      <data key="d5" />
      <data key="d6">Kinesis</data>
      <data key="d7" />
    </node>
    <node id="11">
      <data key="d5" />
      <data key="d6">Kinesis</data>
      <data key="d7" />
    </node>
    <node id="12">
      <data key="d5" />
      <data key="d6">UserConsumerAPI</data>
      <data key="d7" />
    </node>
    <node id="13">
      <data key="d5" />
      <data key="d6">UserConsumerEdge</data>
      <data key="d7" />
    </node>
    <edge source="0" target="4" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="1" target="4" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="1" target="5" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="1" target="6" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="2" target="8" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="4" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="12" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">12</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="0" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="5" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="9" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">10</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="9" id="1">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">10</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="11" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">7</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="5" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">9</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="9" target="5" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="9" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">11</data>
      <data key="d11">data</data>
    </edge>
    <edge source="10" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="11" target="6" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">8</data>
      <data key="d11">data</data>
    </edge>
    <edge source="12" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="13" target="10" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Alert Logic: Scaling Storage and Delivery of Petabytes of Search Data</data>
    <data key="d1">https://www.youtube.com/watch?v=PoYiSKUy8sE</data>
    <data key="d2">Storage service to consumers and provide a search functionality through it.
    System has two parts -- data ingestion and search.
    Total data in store 25 petabytes. Each search query typically looks at 100s of terrabytes of data.
    Search Engine -- MapReduce system based on Lambdas. Rich SQL syntax.
    Search is a spiky workload. On certain gameday, the Lambda fleet scaled from 0 to 55k in an hour and back to 0 when demand went down (saving money).
    Interestingly they use 'Erlang' in writing their Lambda logic.
    The DynamoDB is not connected in the graph. It is likely connected to ECS.</data>
    <data key="d3">data_ingestion,interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
