<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">CloudHSM</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">WORKLOAD_PEEK: user logic making withdraw or deposit requests to backend</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: regional logic to convert user request to a transfer request</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: writes to dynamodb</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: receives notifications and performs company specific logic</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">ApiGateway</data>
      <data key="d7" />
    </node>
    <node id="6">
      <data key="d5">Docker</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: Docker</data>
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">EBS</data>
      <data key="d7">DATA_PEEK: Blockchain State Snapshots</data>
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">DynamoDB</data>
      <data key="d7">DATA_PEEK: Account Balance Information</data>
    </node>
    <node id="9">
      <data key="d5" />
      <data key="d6">SNS</data>
      <data key="d7" />
    </node>
    <edge source="0" target="1" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="0" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="6" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="8" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="7" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="9" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="9" target="4" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Simplex: Building a Scalable Serverless Cryptocurrency Platform</data>
    <data key="d1">https://www.youtube.com/watch?v=U8xlmurP-6o</data>
    <data key="d2">Simplex builds cryptocurrency wallet system for financial institutions.
    Note the system is an N x M mapping (companies x currencies). In the graph we are only showing one company and one cryptocurrency.
    Mainly two flows -- withdrawing and depositing.
    Block data is to be processed (several gigabytes). A new system would take days to catch up and so snapshots are persisted in EBS.
    Main security concern is managing access to the private keys used for transactions. Key is managed offline to avoid hacking attempts.
    For online operation requirements, the keys are managed using CloudHSM. CloudHSM &lt;&gt; EC2 link is a private link.</data>
    <data key="d3">interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
