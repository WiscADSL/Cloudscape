<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyAPI</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5">Nakadi</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: Nakadi</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7">DATA_PEEK: Raw</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7">DATA_PEEK: Hourly</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7">DATA_PEEK: Daily - Main Storage</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="9">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: raw data</data>
    </node>
    <node id="10">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: enriches with attributes</data>
    </node>
    <node id="11">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: for main s3 bucket</data>
    </node>
    <node id="12">
      <data key="d5" />
      <data key="d6">SNS</data>
      <data key="d7" />
    </node>
    <edge source="0" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="6" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="9" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="10" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">data</data>
    </edge>
    <edge source="9" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="10" target="12" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">7</data>
      <data key="d11">data</data>
    </edge>
    <edge source="11" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">NA.-99'.0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="12" target="7" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="12" target="8" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">NA.-99'</data>
      <data key="d11">data</data>
    </edge>
    <edge source="12" target="11" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">NA.-99'</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Zalando: Highly Scalable Data Processing Pipeline</data>
    <data key="d1">https://www.youtube.com/watch?v=RxAmb57NCPM</data>
    <data key="d2">data processing pipeline. online retail platform connecting various stakeholders. 28 million active users per month.
    built the pipeline with 9 people serving about 100 teams. they used nakadi which is an open source distributed event bus. 
    all microservices talk to it. nakadi mostly does batching. each lambda has incoming sqs and outgoing dlq so that if anything fails,
    can retry and recover. the lambda writes to S3 every hour or so. the second lambda is mostly for metadata. 
    third lambda is for daily partition. 2 mil lambda invocations/day can go upto 6 million.</data>
    <data key="d3">data_ingestion</data>
    <data key="d4">True</data>
  </graph>
</graphml>
