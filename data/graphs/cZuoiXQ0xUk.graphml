<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyAgent</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">SageMaker</data>
      <data key="d7">NOTES: Only export model to Lambda
TRAINING: True
SERVING: False</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: ML inference</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: merged defects on consecutive frames into one and return the results to Web UI</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">DynamoDB</data>
      <data key="d7">DATA_PEEK: frame metadata</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7" />
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">MediaConvert</data>
      <data key="d7">WORKLOAD_PEEK: split each video into 65k frames</data>
    </node>
    <node id="7">
      <data key="d5">Web UI in AWS</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: Web UI in AWS</data>
    </node>
    <edge source="0" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="2" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">NA.-99'</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="4" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">NA.-99'.0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="4" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="7" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="2" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">NA.-99'.1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="3" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="5" target="6" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="5" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="6" target="2" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="6" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Leaven: Machine Learning at Massive Scale to Protect Human Life</data>
    <data key="d1">https://www.youtube.com/watch?v=cZuoiXQ0xUk</data>
    <data key="d2">cloud consultancy company; moving customers to cloud.
    this video is about one case where they help a customer to run ML inference on video frames (for road inspection).
    Mention ML library is large, challenging to fit into Lambda. Lambda can only have 250MB expanded space (plus some space in temp directory), but TensorFlow is &gt;1GB. AWS releases new features that allows to pack all pytho libraries into a docker container, with 10GB limit.
    Use 400k images with road defects to train the model.</data>
    <data key="d3">compute_intensive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
