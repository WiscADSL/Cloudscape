<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyEdge</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">Firehose</data>
      <data key="d7" />
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: executed once a minute, prepares and cleans up information</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: data cleaning</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">SageMaker</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7">DATA_PEEK: for ML training</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">DynamoDB</data>
      <data key="d7">DATA_PEEK: live data</data>
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">StepFunctions</data>
      <data key="d7">WORKLOAD_PEEK: first uses Lambda 2 to clean data and then requests retraining of machine learning model</data>
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">CodeCommit</data>
      <data key="d7" />
    </node>
    <node id="9">
      <data key="d5" />
      <data key="d6">ApiGateway</data>
      <data key="d7" />
    </node>
    <edge source="0" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="6" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2'</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="6" id="1">
      <data key="d8">6</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="2" target="4" id="0">
      <data key="d8">5</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="2" target="9" id="0">
      <data key="d8">5</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="9" id="1">
      <data key="d8">6</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="2" id="0">
      <data key="d8">5</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="2" id="0">
      <data key="d8">6</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="7" target="4" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="8" target="2" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="3" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="9" target="2" id="0">
      <data key="d8">5</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="9" target="2" id="1">
      <data key="d8">6</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <data key="d0">Miriade: Forecasting and Real Time Tracking of the Car Parking Availability Italian</data>
    <data key="d1">https://www.youtube.com/watch?v=mKZw29_UtoU</data>
    <data key="d2">Miriade: consulting firm that deals with middleware specialized in big data, machine learning, advanced analytics
    AIM Mobilita: put together all data from parking areas to make previsions of machine learning about future state of occupancy and then make available to public in real time

    Parking lot (UserCompanyEdge) sends real time parking lot occupancy
    Data in DynamoDB that is older than 1 week is automatically deleted
    SageMaker is used to predict data in long term
    Code Commit contains Cloud Formation template that defines the entire architecture; it also contains Lambda definitions and algorithms of SageMaker

    Future plan: use QuickSight for visualization
    Strength: completely serverless (which leads to scalability)</data>
    <data key="d3">data_ingestion,interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
