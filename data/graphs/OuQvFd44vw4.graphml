<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyAPI</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: Triggers scheduled training jobs (uses cloudwatch)</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: Starts/updates ECS based realtime inference service</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">SecretsManager</data>
      <data key="d7" />
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">SageMaker</data>
      <data key="d7">TRAINING: No
SERVING: No</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">SageMaker</data>
      <data key="d7">TRAINING: Yes
SERVING: No</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">ECR</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7">DATA_PEEK: stores the trained ML model</data>
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">ECS</data>
      <data key="d7">WORKLOAD_PEEK: ML Serving</data>
    </node>
    <node id="9">
      <data key="d5">Econda Audience Relationship Platform</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: Econda Audience Relationship Platform</data>
    </node>
    <edge source="0" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="8" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="4" target="0" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="4" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="7" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="2" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="9" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="9" target="8" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">econda GmbH: Building a RealTime Personalization Engine with Amazon Sagemaker and AWS ECS</data>
    <data key="d1">https://www.youtube.com/watch?v=OuQvFd44vw4</data>
    <data key="d2">Econda handles requests coming from websites, stores them, allows users to perform analytics on them.
    Perform daily automated training for each client and allow realtime inference afterwards.
    Interestingly they are using SageMaker for only preprocessing and training, not inference.
    For inference they are using ECS where they have pulled only the relevant parts of SageMaker -- this has reduced costs.
    They have their own algorithms, don't use SageMaker's. So it is only used for undifferentiated heavy lifting.
    Not sure how ECR fits into the picture. They mention something about algorithm versioning using image-text in ECR.</data>
    <data key="d3">compute_intensive,interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
