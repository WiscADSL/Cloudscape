<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">HW_CONFIG: CPU
AUTOSCALE: False
SPOT: False</data>
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">NOTES: Different clusters used for different phases. Pre transcoding step.
HW_CONFIG: GPU+CPU
AUTOSCALE: True
SPOT: True</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">NOTES: Different clusters used for different phases. Transcoding step.
HW_CONFIG: GPU+CPU
AUTOSCALE: True
SPOT: True</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">ElastiCache</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7" />
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">CloudFront</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">UserConsumerWeb</data>
      <data key="d7" />
    </node>
    <node id="8">
      <data key="d5">vendor/partners</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: vendor/partners</data>
    </node>
    <edge source="0" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="0" target="4" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="0" target="1" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="2" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="5" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="5" id="1">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="4" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="0" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="2" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="2" id="1">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="6" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="5" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="7" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="6" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="0" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">MX Player: Achieving Massive Scalability Using Amazon EKS with Spot Instances</data>
    <data key="d1">https://www.youtube.com/watch?v=NfUwtK8ALtw</data>
    <data key="d2">Scale: 300M+ MAU, 200 thousand hours of video content
notes: OTT (over the top). Autoscaled up up to 3K instances. Use h.266 encoding for better network savings (both for client, and CDN costs). Multi-codec transformation.
Key technologies used: SQS, Spot Fleet (autoscaling), Elasticache, S3, Cloudfront, GPU/CPU mix.

Video ingestion:
	Step 1: pre-transcoding (audio/subtitle) FLEET invoked, SQS message, job create in ELASTICACHE
	Step 2: data to SQS, invoke transcoding (video) FLEET autoscaled. Data pull from S3. Mark task done in ELASTICACHE. Write data to S3. 
User: talks to CLOUDFRONT, which pulls from S3.</data>
    <data key="d3">compute_intensive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
