<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">WORKLOAD_PEEK: applications (that generate logs); e.g., web app</data>
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">CloudWatch</data>
      <data key="d7" />
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">CloudTrail</data>
      <data key="d7" />
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">Firehose</data>
      <data key="d7" />
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: convert log format (from multiple log sources, each with a different original format), filter irrelevant logs</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: read data from s3, and push it to elastic search</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7">DATA_PEEK: processed logs (across all accounts)</data>
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">OpenSearch</data>
      <data key="d7" />
    </node>
    <node id="8">
      <data key="d5">VPC FlowLogs</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: VPC FlowLogs</data>
    </node>
    <node id="9">
      <data key="d5">Kibana</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: Kibana</data>
    </node>
    <edge source="0" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="4" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="6" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="7" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="5" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="9" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="3" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="9" target="6" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <data key="d0">Biogen: Centralized Logging Solution for Multi Accounts</data>
    <data key="d1">https://www.youtube.com/watch?v=m8xtR3-ZQs8</data>
    <data key="d2">Collecting logs from individual accounts (hundreds of accounts) and storing them in a central account -- then can be searched and analysed.
    Use multi-account: individual accounts generate logs (network logs, infra logs, app logs) and eventually push into a centralized account.
    Individual Account: EC2 (app), CloudWatch-CloudTrail-FlowLogs (log collection), KinesisFireHose, Lambda
    Centralized Account: S3, Lambda, ElasticSearch, Kibana
    Why CloudWatch Agent and not Kinesis Agent: because KinesisAgent for windows wasn't avaiable, doesn't provide OS logs.
    Why S3 and not directly push to ElasticSearch? Great for flexibility (can use a different analysis/search tool in the future), S3 has elasticity (no worry of running out of space), resting data in S3 is encrypted
    Centralized logging is great for troubleshooting, easy to search and figure out cause of fault without having to look at each account.</data>
    <data key="d3">data_ingestion</data>
    <data key="d4">True</data>
  </graph>
</graphml>
