<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyDataStream</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">ELB</data>
      <data key="d7" />
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">AmazonMQ</data>
      <data key="d7" />
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">AUTOSCALE: True
WORKLOAD_PEEK: K8s on EC2. 200+ microservices. Crawler jobs + query services. runs a custom kubernetes cluster which hosts numerous microservices including Jupyter, Keycloak, Kong.</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">VPCPeering</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">RDS</data>
      <data key="d7">DATA_PEEK: stores data generated by microservices during processing. Uses postgres. Unknown data type.</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">ElastiCache</data>
      <data key="d7">DATA_PEEK: caching for user sessions management</data>
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">MongoDBAtlas</data>
      <data key="d7" />
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">UserConsumerWeb</data>
      <data key="d7" />
    </node>
    <edge source="0" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="5" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="3" target="8" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="6" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="3" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <data key="d0">Intellect Design Arena: Insurance Risk Assessment with Intellect FABRIC Data Services</data>
    <data key="d1">https://www.youtube.com/watch?v=AS2JeM2FUzE</data>
    <data key="d2">Purpose of system: User can match, aggregate, triangulate the data from different sources and forms
    The Kubernetes cluster is receiving one to two million messages upon each crawling.
    Has multiple services: crawling, deduplication and more.
    Elastic Cache is using Redis
    Moved from MongoDB on EC2 to MongoDB Atlas: overhead: needed to maintain snapshots, backups, regularatory compliance. Operation team was busy. MongoDB Atlas alleviates that. VPC required for regulatory.
    RDS is using Postgres
    Future Plan: Move from Kubernetes to EKS (completely serverless); move from Jupyter on EC2 to Sage Maker; move from MongoDB to Document DB</data>
    <data key="d3">data_ingestion,interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
