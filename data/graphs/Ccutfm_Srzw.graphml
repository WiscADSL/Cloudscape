<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">Kinesis</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">Kinesis</data>
      <data key="d7" />
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">KinesisDataStream</data>
      <data key="d7" />
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: transformer (search keywords -&gt; related products)</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: producer (polls documentdb, talks to inventory api -&gt; produces recommendations)</data>
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">DocumentDB</data>
      <data key="d7">DATA_PEEK: search keywords (strings)</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">ElastiCache</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">UserConsumerMobile</data>
      <data key="d7" />
    </node>
    <node id="8">
      <data key="d5">SearchAPI (Fetch related products)</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: SearchAPI (Fetch related products)</data>
    </node>
    <node id="9">
      <data key="d5">InventoryAPI</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: InventoryAPI</data>
    </node>
    <node id="10">
      <data key="d5">SearchAPI (User Facing)</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: SearchAPI (User Facing)</data>
    </node>
    <edge source="0" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="8" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="5" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="4" target="9" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="4" target="6" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="4" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="10" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="0" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="9" target="4" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="10" target="7" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Zulily: A Compelling Suggestive Search Experience Using Amazon DocumentDB with MongoDB Compatibility</data>
    <data key="d1">https://www.youtube.com/watch?v=Ccutfm_Srzw</data>
    <data key="d2">Suggestive search experience, basically recommendations but only based on search data of other similar users.
    Kinesis &gt; KinesisDataStream &gt; Kinesis pattern is being used for data filtering (real time filtering with no servers involved!).
    Initially they were planning to use MongoDB (as their team is expert at it) but decided to use DocumentDB due to low maintenance overhead and ease of use.</data>
    <data key="d3">interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
