<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyDeveloper</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">EKS</data>
      <data key="d7" />
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">EKS</data>
      <data key="d7">NOTES: terraform on eks does the heavy lifting</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">SQS</data>
      <data key="d7" />
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">ALB</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">RDS</data>
      <data key="d7" />
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">RAM</data>
      <data key="d7">NOTES: Used to manage 150 AWS accounts.</data>
    </node>
    <edge source="0" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Xero: Building a Scalable Self-Service Portal for Thousands of Developers Provisioning Resources</data>
    <data key="d1">https://www.youtube.com/watch?v=Felt-hOU6kU</data>
    <data key="d2">Business platform: 3M+ customers. 1600 developers (within Xero, i think).
The key idea is to simplify provisioning. Final resources are created on EKS instances, and within preconfigured subnets and also uses RDS etc.
They need to create/manage AWS accounts for all customers (best guess), so they use Resource Access Manager.
150 subnets and ~150 AWS accounts.
Motivation: Quote: It is super hard to create infrastructure that is compliant.
Graph is _not_ usable. Graph: unusable.</data>
    <data key="d3">control</data>
    <data key="d4">True</data>
  </graph>
</graphml>
