<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">UserCompanyAgent</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">WORKLOAD_PEEK: Any service for example Hadoop running on EC2</data>
    </node>
    <node id="2">
      <data key="d5">Token Vending Service</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: Token Vending Service</data>
    </node>
    <node id="3">
      <data key="d5">LDAP</data>
      <data key="d6">ThirdParty</data>
      <data key="d7">NAME: LDAP</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">STS</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">S3</data>
      <data key="d7" />
    </node>
    <edge source="0" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="1" target="0" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">7</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="4" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Pinterest: Scalable Access Control with STS Token Vending</data>
    <data key="d1">https://www.youtube.com/watch?v=i10a06IU4WQ</data>
    <data key="d2">The usecase is to restrict the data access and also make it accessible from Hadoop and others for data processing. Initially, used Iam roles and the EC2 instances are given Iam roles to access data. Everytime new role is created, they had to create service instances to do access control - not scalable. Making use of managed policies in STS to get tokens with managed policies. Graph is not very usable as they just mention how it gets the token which can be used to authorize requests and this is a graph for one such example use case.</data>
    <data key="d3">control</data>
    <data key="d4">False</data>
  </graph>
</graphml>
