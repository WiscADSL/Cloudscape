<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">Route53</data>
      <data key="d7" />
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">Route53</data>
      <data key="d7" />
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: periodic. (periodically checking cloudfront logs. Uses AWS SDK internally)</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7">WORKLOAD_PEEK: webapp</data>
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">CloudWatch</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">ElastiCache</data>
      <data key="d7">DATA_PEEK: cache common queries (no more details)</data>
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">CloudFront</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">Fargate</data>
      <data key="d7">ECS_EKS: ECS
WORKLOAD_PEEK: webapp</data>
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">ApiGateway</data>
      <data key="d7" />
    </node>
    <node id="9">
      <data key="d5" />
      <data key="d6">RDS</data>
      <data key="d7">DATA_PEEK: "basic storage for basic CRUD"</data>
    </node>
    <node id="10">
      <data key="d5" />
      <data key="d6">OpenSearch</data>
      <data key="d7">NOTES: used for searching apartment addresses. Second: storing and searching application logs for debugging.</data>
    </node>
    <node id="11">
      <data key="d5" />
      <data key="d6">UserConsumerWeb</data>
      <data key="d7" />
    </node>
    <node id="12">
      <data key="d5" />
      <data key="d6">DocumentDB</data>
      <data key="d7">DATA_PEEK: "for unstructured"</data>
    </node>
    <edge source="0" target="6" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="1" target="8" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="1" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="2" target="1" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">5</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="3" target="12" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">7</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="3" target="9" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">9</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="3" target="10" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">11</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="3" target="6" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">13</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="2" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">6</data>
      <data key="d11">data</data>
    </edge>
    <edge source="5" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="1" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="6" target="11" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.9</data>
      <data key="d11">data</data>
    </edge>
    <edge source="6" target="11" id="1">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.9</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="5" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="7" target="12" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.2</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="7" target="9" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.4</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="7" target="10" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.6</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="7" target="6" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.8</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">4</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="9" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">10</data>
      <data key="d11">data</data>
    </edge>
    <edge source="9" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.5</data>
      <data key="d11">data</data>
    </edge>
    <edge source="10" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">12</data>
      <data key="d11">data</data>
    </edge>
    <edge source="10" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.7</data>
      <data key="d11">data</data>
    </edge>
    <edge source="11" target="0" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">meta</data>
    </edge>
    <edge source="12" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">8</data>
      <data key="d11">data</data>
    </edge>
    <edge source="12" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">3'.3</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Zigbang: A Hybrid API of Serverless and ECS, Infra as a Code via CDK</data>
    <data key="d1">https://www.youtube.com/watch?v=0F7KDLz-kIQ</data>
    <data key="d2">"Hybrid architecture with duplexing"
    Initially, only Lambda. Due to traffic and cost issues, started operating with ECS/Fargate.
    Uses 2 route53. The internal one is used to route requests to either the fargate cluster or ApiGateway. Internal route53 is used for weight distrubtion.
    Used Lambda to read CloudWatch logs and get load information. (building custom autoscaling mechanisms.)
    ECS insufficient to handle bursty traffic. Used lambda ("in order to prevent traffic loss during autoscaling"). while ECS was scaling out.
    Future: microservice architecture.</data>
    <data key="d3">interactive</data>
    <data key="d4">True</data>
  </graph>
</graphml>
