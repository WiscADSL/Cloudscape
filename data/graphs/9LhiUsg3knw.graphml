<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d11" for="edge" attr.name="type" attr.type="string" />
  <key id="d10" for="edge" attr.name="seq" attr.type="string" />
  <key id="d9" for="edge" attr.name="notes" attr.type="string" />
  <key id="d8" for="edge" attr.name="flow_id" attr.type="long" />
  <key id="d7" for="node" attr.name="notes" attr.type="string" />
  <key id="d6" for="node" attr.name="service" attr.type="string" />
  <key id="d5" for="node" attr.name="name" attr.type="string" />
  <key id="d4" for="graph" attr.name="graph_usable" attr.type="boolean" />
  <key id="d3" for="graph" attr.name="categories" attr.type="string" />
  <key id="d2" for="graph" attr.name="notes" attr.type="string" />
  <key id="d1" for="graph" attr.name="link" attr.type="string" />
  <key id="d0" for="graph" attr.name="name" attr.type="string" />
  <graph edgedefault="directed">
    <node id="0">
      <data key="d5" />
      <data key="d6">Aurora</data>
      <data key="d7">DATA_PEEK: editorial data</data>
    </node>
    <node id="1">
      <data key="d5" />
      <data key="d6">RedShift</data>
      <data key="d7">DATA_PEEK: analytics on user feedback</data>
    </node>
    <node id="2">
      <data key="d5" />
      <data key="d6">EC2</data>
      <data key="d7">AUTOSCALE: Yes
WORKLOAD_PEEK: collect and process user provided feedback</data>
    </node>
    <node id="3">
      <data key="d5" />
      <data key="d6">DynamoDB</data>
      <data key="d7" />
    </node>
    <node id="4">
      <data key="d5" />
      <data key="d6">Fargate</data>
      <data key="d7" />
    </node>
    <node id="5">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7" />
    </node>
    <node id="6">
      <data key="d5" />
      <data key="d6">Lambda</data>
      <data key="d7" />
    </node>
    <node id="7">
      <data key="d5" />
      <data key="d6">AppSync</data>
      <data key="d7" />
    </node>
    <node id="8">
      <data key="d5" />
      <data key="d6">UserConsumerMobile</data>
      <data key="d7" />
    </node>
    <node id="9">
      <data key="d5" />
      <data key="d6">UserConsumerMobile</data>
      <data key="d7" />
    </node>
    <node id="10">
      <data key="d5" />
      <data key="d6">CouchBase</data>
      <data key="d7" />
    </node>
    <node id="11">
      <data key="d5" />
      <data key="d6">UserCompanyDomainExpert</data>
      <data key="d7" />
    </node>
    <node id="12">
      <data key="d5" />
      <data key="d6">UserConsumerArtist</data>
      <data key="d7" />
    </node>
    <edge source="1" target="3" id="0">
      <data key="d8">2</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="2" target="3" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">1</data>
      <data key="d11">data</data>
    </edge>
    <edge source="3" target="7" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">2</data>
      <data key="d11">data</data>
    </edge>
    <edge source="4" target="3" id="0">
      <data key="d8">1</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="11" id="0">
      <data key="d8">3</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="9" id="0">
      <data key="d8">4</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="7" target="12" id="0">
      <data key="d8">5</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <edge source="8" target="2" id="0">
      <data key="d8">0</data>
      <data key="d9" />
      <data key="d10">0</data>
      <data key="d11">data</data>
    </edge>
    <data key="d0">Musixmatch: How Content is Generated by Users Italian</data>
    <data key="d1">https://www.youtube.com/watch?v=9LhiUsg3knw</data>
    <data key="d2">Musixmatch has an interesting function. They gather data (feedback) from users to gather lyrics for songs and also sync them with music.
    The architecture describes how they perform this process of generating content from users.
    A user initiates the feedback process and based on the feedback, some 'tasks' are generated.
    These tasks are delivered to either company internal experts, other users, or artists based on their type.
    The response to these tasks generates more feedback and/or tasks, so the loop continues and the system gains more and more data about music/lyrics/etc.
    Unfortunately a lot of components are disconnected in the graph which makes it hard to understand.</data>
    <data key="d3">data_ingestion,compute_intensive</data>
    <data key="d4">False</data>
  </graph>
</graphml>
